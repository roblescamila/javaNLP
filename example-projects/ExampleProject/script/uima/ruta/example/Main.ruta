PACKAGE uima.ruta.example;

TYPESYSTEM types.BibtexTypeSystem;

SCRIPT uima.ruta.example.Types;
SCRIPT uima.ruta.example.Package;
SCRIPT uima.ruta.example.Method;
SCRIPT uima.ruta.example.Import;
SCRIPT uima.ruta.example.Block;
SCRIPT uima.ruta.example.AccessModifier;
SCRIPT uima.ruta.example.ClassName;
SCRIPT uima.ruta.example.Inheritance;
SCRIPT uima.ruta.example.Implementation;
SCRIPT uima.ruta.example.SingleLineComment;
SCRIPT uima.ruta.example.Name;
SCRIPT uima.ruta.example.JavaReservedWords;
SCRIPT uima.ruta.example.ClassHeader;
SCRIPT uima.ruta.example.Declaration;
SCRIPT uima.ruta.example.MultiLineComment;
SCRIPT uima.ruta.example.Parameters;
SCRIPT uima.ruta.example.Class;
SCRIPT uima.ruta.example.MethodHeader;


Document{-> CALL(Package)};
Document{-> CALL(Import)};
Document{-> CALL(Types)};
Document{-> CALL(Method)};
Document{-> CALL(Block)};
Document{-> CALL(AccessModifier)};
Document{-> CALL(ClassName)};
Document{-> CALL(Inheritance)};
Document{-> CALL(Implementation)};
Document{-> CALL(SingleLineComment)};
Document{-> CALL(Name)};
Document{-> CALL(JavaReservedWords)};
Document{-> CALL(ClassHeader)};
Document{-> CALL(Declaration)};
Document{-> CALL(MultiLineComment)};
Document{-> CALL(Parameters)};
Document{-> CALL(Class)};
Document{-> CALL(MethodHeader)};
// create bibtex annotation
Document{-> CREATE(Bibtex, "types" = Types,
                           "declaration" = Declaration,  
                           "package" = Package, 
                           "method" = Method, 
                           "import" = Import,
                           "block" = Block,
                           "classname" = ClassName,
                           "inheritance" = Inheritance,
                           "implementation" = Implementation,
                           "singlelinecomment" = SingleLineComment,
                           "name" = Name,                           
                           "classheader" = ClassHeader,
                           "javareservedwords" = JavaReservedWords,
                           "multilinecomment" = MultiLineComment,
                           "parameters" = Parameters,
                           "class" = Class,
                            "methodheader" = MethodHeader,
                           "accessmodifier" = AccessModifier)};
                           
                           
                           
                           